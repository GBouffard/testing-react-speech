{"version":3,"sources":["voices.js","customised-styles.js","App.js","reportWebVitals.js","index.js"],"names":["voices","name","country","message","style","play","hover","backgroundColor","color","button","padding","fontFamily","fontSize","cursor","pointerEvents","outline","border","borderRadius","height","width","display","justifyContent","alignItems","pause","stop","resume","minimalButtonStyle","minimalHoverButtonStyle","simpleButton","simpleAllButtons","smallButton","margin","App","className","text","styles","textAsButton","displayText","voice","pitch","rate","volume","lang","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.569a917c.chunk.js","sourcesContent":["const voices = [\n    {\n        name: 'Daniel',\n        country: 'ðŸ‡¬ðŸ‡§',\n        message: 'My name is Daniel and I am from nowhere'\n    },\n    {\n        name: 'Alice',\n        country: 'ðŸ‡®ðŸ‡¹',\n        message: 'My name is Alice and I am from Italy'\n    },\n    {\n        name: 'Amelie',\n        country: 'ðŸ‡«ðŸ‡·',\n        message: 'Mon nom est Amelie et je viens de France'\n    },\n    {\n        name: 'Diego',\n        country: 'ðŸ‡ªðŸ‡¸',\n        message: 'Me llamo Diego y soy de EspaÃ±a'\n    },\n    {\n        name: 'Ellen',\n        country: 'ðŸ‡³ðŸ‡±',\n        message: 'My name is Ellen and I am from Netherlands'\n    },\n    {\n        name: 'Fiona',\n        country: 'ðŸ‡¬ðŸ‡§',\n        message: 'My name is Fiona and I am from nowhere'\n    },\n    {\n        name: 'Ioana',\n        country: 'ðŸ‡·ðŸ‡´',\n        message: 'My name is Ioana and I am from Romania'\n    },\n    {\n        name: 'Karen',\n        country: 'ðŸ‡¦ðŸ‡º',\n        message: 'My name is Karen and I am from Australia'\n    },\n    {\n        name: 'Kyoko',\n        country: 'ðŸ‡¯ðŸ‡µ',\n        message: 'My name is Kyoko and I am from Japan'\n    },\n    {\n        name: 'Laura',\n        country: 'ðŸ‡¸ðŸ‡°',\n        message: 'My name is Laura and I am from Slovakia'\n    },\n    {\n        name: 'Lee',\n        country: 'ðŸ‡¦ðŸ‡º',\n        message: 'My name is Lee and I am from Australia'\n    },\n    {\n        name: 'Mariska',\n        country: 'ðŸ‡­ðŸ‡º',\n        message: 'My name is Mariska and I am from Hungary'\n    },\n    {\n        name: 'Mei-Jia',\n        country: 'ðŸ‡¨ðŸ‡³',\n        message: 'My name is Mei-Jia and I am from China'\n    },\n    {\n        name: 'Melina', country: 'ðŸ‡¬ðŸ‡·', message: 'My name is Melina and I am from Greece'\n    },\n    {\n        name: 'Milena', country: 'ðŸ‡·ðŸ‡º', message: 'My name is Milena and I am from Russia'\n    },\n    {\n        name: 'Moira', country: 'ðŸ‡®ðŸ‡ª', message: 'My name is Moira and I am from Ireland'\n    },\n    {\n        name: 'Monica', country: 'ðŸ‡ªðŸ‡¸', message: 'Me llamo Monica y soy de EspaÃ±a'\n    },\n    {\n        name: 'Nora', country: 'ðŸ‡³ðŸ‡´', message: 'My name is Nora and I am from Norway'\n    },\n    {\n        name: 'Paulina', country: 'ðŸ‡²ðŸ‡½', message: 'Me llamo Paulina y soy de mÃ©xico'\n    },\n    {\n        name: 'Samantha', country: 'ðŸ‡ºðŸ‡¸', message: 'My name is Samantha and I am from USA'\n    },\n    {\n        name: 'Sara', country: 'ðŸ‡©ðŸ‡°', message: 'My name is Sara and I am from Denmark'\n    },\n    {\n        name: 'Satu', country: 'ðŸ‡«ðŸ‡®', message: 'My name is Satu and I am from Finland'\n    },\n    {\n        name: 'Tessa', country: 'ðŸ‡¿ðŸ‡¦', message: 'My name is Tessa and I am from South Africa'\n    },\n    {\n        name: 'Thomas', country: 'ðŸ‡«ðŸ‡·', message: 'Mon nom est Thomas et je viens de France'\n    },\n    {\n        name: 'Xander', country: 'ðŸ‡³ðŸ‡±', message: 'My name is Xander and I am from Netherlands'\n    },\n    {\n        name: 'Yelda', country: 'ðŸ‡¹ðŸ‡·', message: 'My name is Yelda and I am from Turkey'\n    },\n    {\n        name: 'Yuri', country: 'ðŸ‡·ðŸ‡º', message: 'My name is Yuri and I am from Russia'\n    },\n    {\n        name: 'Zosia', country: 'ðŸ‡µðŸ‡±', message: 'My name is Zosia and I am from Poland'\n    },\n    {\n        name: 'Zuzana', country: 'ðŸ‡¨ðŸ‡¿', message: 'My name is Zuzana and I am from Czech Republic'\n    }\n];\n\nexport default voices;","export const style = {\n    play: {\n        hover: {\n            backgroundColor: 'blue',\n            color: 'white'\n        },\n        button: {\n            padding: '5px',\n            fontFamily: 'Helvetica',\n            fontSize: '1.0em',\n            cursor: 'pointer',\n            pointerEvents: 'none',\n            outline: '#4CAF50 solid 10px',\n            backgroundColor: 'red',\n            border: '3px solid orange',\n            borderRadius: '15px',\n            // if we define height and width, the play icons shows but it's not scaled or centered\n            height: '50px',\n            width: '200px',\n            // to center or scale  it\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        // the svg needs to be styled via css with\n        // display: block;\n        // height: 100%;\n    },\n    pause: {\n        hover: {},\n        button: {},\n    },\n    stop: {\n        hover: {},\n        button: {},\n    },\n    resume: {\n        hover: {},\n        button: {},\n    },\n};\n\nconst minimalButtonStyle = {\n    height: '40px',\n    width: '40px',\n    cursor: 'pointer',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n}\n\nconst minimalHoverButtonStyle = {\n    backgroundColor: 'white'\n}\n\n// nb all buttons need to be listed even if not used\nexport const simpleButton = {\n    play: {\n        hover: minimalHoverButtonStyle,\n        button: minimalButtonStyle,\n    },\n    pause: {\n        hover: {},\n        button: {},\n    },\n    stop: {\n        hover: {},\n        button: {},\n    },\n    resume: {\n        hover: {},\n        button: {},\n    },\n};\n\nexport const simpleAllButtons = {\n    play: {\n        hover: minimalHoverButtonStyle,\n        button: minimalButtonStyle,\n    },\n    pause: {\n        hover: minimalHoverButtonStyle,\n        button: minimalButtonStyle,\n    },\n    stop: {\n        hover: minimalHoverButtonStyle,\n        button: minimalButtonStyle,\n    },\n    resume: {\n        hover: minimalHoverButtonStyle,\n        button: minimalButtonStyle,\n    },\n};\n\nexport const smallButton = {\n    ...simpleButton,\n    play: {\n        ...simpleButton.play,\n        button: {\n            ...minimalButtonStyle,\n            height: '30px',\n            width: '30px',\n            margin: '0 5px'\n        }\n    }\n}","import './App.css';\nimport Speech from 'react-speech';\nimport voices from './voices';\nimport { style, simpleButton, simpleAllButtons, smallButton } from './customised-styles';\n\n\nconst App = () => {\n  return <div className=\"App\">\n    <h1>testing-react-speech</h1>\n\n    <div className=\"speeches-container\">\n      <div className=\"speech-box\">\n        <div className=\"title\">default Usage (CSS Buggy by default)</div>\n        <Speech\n          text=\"This is the default Usage\" />\n      </div>\n\n      <div className=\"speech-box\">\n        <div className=\"title\">Add style, styling all CSS properties (Ugly!)</div>\n        <Speech\n          styles={style}\n          text=\"I added some style on all the see hess hess properties!\" />\n      </div>\n\n      {/* There are css bugs with the svg icons display - fixed with cvg-icon-display-fix class */}\n      <div className=\"speech-box svg-icon-display-fix\">\n        <div className=\"title\">Minimal style for the Play button</div>\n        <Speech\n          styles={simpleButton}\n          text=\"I fixed the ayssveegee because I kick ass!\" />\n      </div>\n\n      {/* There are css bugs with the svg icons display - fixed with cvg-icon-display-fix class\n      There are css bugs with the multiple buttons display - fixed with multiple-buttons-display-fix class */}\n      <div className=\"speech-box svg-icon-display-fix multiple-buttons-display-fix\">\n        <div className=\"title\">Display all control buttons (with minimal style)</div>\n        <Speech\n          styles={simpleAllButtons}\n          // The booleans are mandatory for the buttons to show\n          stop={true}\n          pause={true}\n          resume={true}\n          text=\"This is a very long sentence because I want to test if it works and stuff and maybe pause it\" />\n      </div>\n\n      <div className=\"speech-box center-button\">\n        <div className=\"title\">Adding text in the play button</div>\n        <Speech\n          styles={simpleButton}\n          textAsButton={true}\n          displayText=\"Hello\"\n          text=\"Hello, that's what the button says\"\n          voice=\"Daniel\" />\n      </div>\n\n      <div className=\"speech-box center-button\">\n        <div className=\"title\">Change Pitch, rate, volume, lang & voice props</div>\n        <Speech\n          styles={simpleButton}\n          text=\"I am Daniel. I have altered the pitch, rate and volume of my voice\"\n          pitch=\"0.1\" // 1 default value / min=0 max=2 step=1\n          rate=\"0.5\" // aka the speed / 1 default value / max=3.5 min=0.5 step=0.5\n          volume=\"0.3\" // 1 default value / max=1 min=0 step=0.1\n          lang=\"en-GB\" // 1 default value / EN-GB, EN-US are teh options\n          voice=\"Daniel\" // default value of the browser I guess\n        />\n      </div>\n\n      <div className=\"speech-box full-row\">\n        <div className=\"title\">All the possible voices</div>\n        <div className=\"displayFlex\">\n          {voices.map(({ name, message, country }) => {\n            return <div className=\"displayFlex flexColumn\">\n              {country}\n              <Speech\n                styles={smallButton}\n                text={message}\n                voice={name} />\n            </div>\n          })}\n        </div>\n      </div>\n    </div>\n  </div >\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}